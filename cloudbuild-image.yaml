# Build Docker Image
steps:
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/test-cicd-repo/python-image:latest', '.' ]

# Push Docker Image
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/test-cicd-repo/python-image:latest']

# Create a new Instance Template
- name: 'gcr.io/cloud-builders/gcloud'
  id: create-instance-template
  args:
    - compute
    - instance-templates
    - create-with-container
    - cloud-build-instance-template-$_ENV-$SHORT_SHA
    - --machine-type=e2-small
    - --region=us-central1
    - --tags=allow-hc-and-proxy,allow-ssh
    - --container-image
    - us-central1-docker.pkg.dev/$PROJECT_ID/test-cicd-repo/python-image:latest

# Check if MIG exists, then create or update it
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      
      # Check if the MIG exists
      if gcloud compute instance-groups managed describe ${_MIG_NAME} --region=${_REGION} > /dev/null 2>&1; then
        echo "Managed Instance Group exists, updating..."
        gcloud compute instance-groups managed rolling-action start-update ${_MIG_NAME} \
          --version=template=cloud-build-instance-template-$_ENV-$SHORT_SHA \
          --region=${_REGION} \
          --max-unavailable=0
      else
        echo "Managed Instance Group does not exist, creating a new one..."
        gcloud compute instance-groups managed create ${_MIG_NAME} \
          --template=cloud-build-instance-template-$_ENV-$SHORT_SHA \
          --size=1 \
          --region=${_REGION}
      fi
  env:
  - 'MIG_NAME=$_MIG_NAME'
  - 'REGION=$_REGION'
  

options:
  logging: CLOUD_LOGGING_ONLY
